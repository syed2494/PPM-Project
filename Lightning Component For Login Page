Here I created a Login Page Using Lightning Component 

Component--------------->
-----UserLogin.cmp----->

<aura:component implements="flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" controller="Login"> 
    <aura:attribute name="recordId" type="Id"/>
    <aura:attribute name = "DisplayError" type = "String"/>
    <aura:attribute name = "UserName" type = "String"/>
    <aura:attribute name = "Password" type = "String"/>
    <aura:attribute name = "EnterPassword" type = "String"/>
    <aura:attribute name = "ConfirmPassword" type = "String"/>
   
    
    
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    
	
<div class="test">
    
    <div class="slds-form-element slds-align_absolute-center slds-m-top_x-large" >
        
        <!--<div style="background-color:powderblue;height: 606px;" class="slds-form-element slds-align_absolute-center slds-m-top_x-large" >-->
                            
            
            <div class=" slds-large-size_4-of-12">
          
                  <div style="text-align:center;">
      
             <img style="" src="{!$Resource.ITCLogo}"/>
                  </div>

            <form>	
           
                <div>
                    
                    <div class="slds-align_absolute-center slds-m-top_small slds-text-heading_large" >
                        <span>ITC Employee Portal</span>
                    </div> 
                    <div aura:id="loginsection">
                        <div class="slds-form-element__control">
                          
                            <lightning:input label="User Name" name="abc"  id="UserName" placeholder="User Name" value="{!v.UserName}" />
                        </div>                
                        <div class="slds-form-element__control">
                            <lightning:input label="Password" type="password" name="abc" id="Password"  placeholder="Password" value="{!v.Password}" />
                        </div>
                        <div class="slds-align_absolute-center slds-m-top_small slds-text-heading_small">
                            <ui:outputText  value="{!v.DisplayError}" />
                        </div>               
                        <div class="slds-align_absolute-center" style="height:4rem">
                            
                            <lightning:button variant="success" label="Login" onclick="{!c.loginPage}" />     
                            <lightning:button variant="success" label="Forgot Password" onclick="{!c.forgotpassword}"/>
                        </div>                        
                    </div>
                    <div aura:id="forgotpassword">
                        <div class="slds-form-element__control">
                            <lightning:input label="User Name" name="abc" id="UserName1" placeholder="User Name" value="{!v.UserName}" />
                        </div>                        
                        <div class="slds-form-element__control">
                            <lightning:input label="Enter NewPassword"  id="Password1"  placeholder="EnterPassword" value="{!v.EnterPassword}" />
                        </div>                        
                        <div class="slds-form-element__control">
                            <lightning:input label="ConfirmPassword"   id="Password2"  placeholder="ConfirmPassword" value="{!v.ConfirmPassword}" />
                        </div>
                        <div class="slds-align_absolute-center slds-m-top_small slds-text-heading_small">
                            <ui:outputText  value="{!v.DisplayError}" />
                        </div> 
                        <div class="slds-align_absolute-center" style="height:4rem">                            
                            <lightning:button variant="success" label="Submit" onclick="{!c.save}" />  
                            <lightning:button variant="success" label="Cancel" onclick="{!c.Cancel}" />        
                        </div>                       
                    </div>                   
                </div>                
            </form>
        </div>
    </div>
    </div>
   
</aura:component>



-----------------Controller-------------------------------------------------------->

({
    loginPage : function(component, event, helper) {
        //var recordId = component.get("recordId");
        var action = component.get("c.getTeam_Member_Profile");
        var UserName = component.get("v.UserName"); 
        var Password= component.get("v.Password");
        
        var State;
        
        action.setParams({ UserName:component.get("v.UserName"), Password:component.get("v.Password") });
        console.log("The value of a is " +UserName);
        console.log("The value of a is " +Password);
        
        if($A.util.isEmpty(UserName) || $A.util.isUndefined(UserName )){
            alert('Please Enter User Name!');
            return;
        }   
        if($A.util.isEmpty(Password) || $A.util.isUndefined(Password)){
            alert('Please Enter Password!');
            return;	
        } 
        
        action.setCallback(this,function(a){
            var recordId = component.get("v.recordId");
            var url = '/apex/UpdateDetails?Id =' + recordId;
            component.set("v.DisplayError",'');  
            
            State = a.getState();   
            console.log(a.getState());
            if(State == "SUCCESS") {
                var rtnValue = a.getReturnValue();
                if(rtnValue != "Invalid Password" && rtnValue != "User dose not exit!"){
                    console.log('rtnvalue is'+rtnValue);
                    // component.set("v.DisplayError",'Success login');
                    window.open('/apex/UpdateDetails?Id='+a.getReturnValue(),"_self");
                  

                }else{
                    component.set("v.DisplayError",'User Name or Password is incorrect');
                }
            }
            else{
                console.log('Unsuccessful');
                
            }
        });
        $A.enqueueAction(action);
        component.set("v.UserName",'');
        component.set("v.Password",'');
    },
    forgotpassword : function(component, event, helper){
        var cmpTarget = component.find('loginsection');
        
        console.log('hey');
        $A.util.addClass(cmpTarget,'displaynone');
        $A.util.removeClass(component.find('forgotpassword'), 'displaynone');
        var EnterPassword = component.get("v.EnterPassword"); 
        var ConfirmPassword= component.get("v.ConfirmPassword");
        
    },
    
    
    save : function(component,event,helper){
        
        var cmpTarget = component.find('forgotpassword');
        
        
        var action = component.get("c.getforgetpassword");
        var State;
        var UserName = component.get("v.UserName"); 
        var EnterPassword = component.get("v.EnterPassword"); 
        var ConfirmPassword= component.get("v.ConfirmPassword");
        if($A.util.isEmpty(UserName) || $A.util.isUndefined(UserName )){
            alert('Please Enter User Name!');
            return;
        }
        
        if($A.util.isEmpty(EnterPassword) || $A.util.isUndefined(EnterPassword)){
            alert('Please Enter Password!');
            return;
        }
        
        if($A.util.isEmpty(ConfirmPassword) || $A.util.isUndefined(ConfirmPassword)){
            alert('Please Enter Confirm Password!');
            return;
        }
        
        if(EnterPassword != ConfirmPassword){
            alert('OOPS mismatch password!');
            return;
        }
        
        $A.util.removeClass(component.find('loginsection'), 'displaynone');
        $A.util.addClass(component.find('forgotpassword'), 'displaynone');
        action.setParams({ UserName:component.get("v.UserName"), Password1:component.get("v.EnterPassword"), Password2:component.get("v.ConfirmPassword") });
        console.log("The value of a is " +UserName);
        console.log("The value of a is " +Password1);
        console.log("The value of a is " +Password2);
        action.setCallback(this,function(a){ 
            
            
            console.log('successful');
            State = a.getState();   
            
            if(State == "SUCCESS") {
                var result= a.getReturnValue();
                if(result =='SUCCESS'){
                    console.log('rtnvalue is'+result);
                    component.set("v.DisplayError",'Password changed Successfully, please relogin');
                    // component.set("v.DisplayError",'Success login');
                    // window.open('/apex/UpdateDetails?Id='+a.getReturnValue(),"_self");
                }
            }else{
                component.set("v.DisplayError",'OOPS mismatch password!');
            }
            
            
        });
        
        $A.enqueueAction(action);
        component.set("v.UserName",'');
        component.set("v.Password1",'');
        component.set("v.Password2",'');
    },
    
    doInit : function(component, event, helper) {
        
        
        $A.util.addClass(component.find('forgotpassword'), 'displaynone');
    },
     Cancel : function(component, event, helper) {
    
         var cmpTarget = component.find('forgotpassword');
         var action = component.get("c.getforgetpassword");
        $A.util.removeClass(component.find('loginsection'), 'displaynone');
        $A.util.addClass(component.find('forgotpassword'), 'displaynone');
    
     }
})


-----------  Apex Class------------------------------------------------------------->

public class Login {
    @AuraEnabled
    // public Team_Member_Profile__c  Team{get;set;}
        public static string getTeam_Member_Profile(String UserName,String Password){
            List<Team_Member_Profile__c> Team=new List<Team_Member_Profile__c>([select Id,UserName__c,Password__c from Team_Member_Profile__c Where UserName__c=:UserName]);
        system.debug('team details'+Team);
        if(Team.size()==0){
            return 'User dose not exit!';
        }		
        else{
            if(Team[0].UserName__c == UserName && Team[0].Password__c == Password ){
                //system.debug('@@@@@TeamMemberRecordId', +TeamMemberRecordId);
                //String id = ApexPages.currentPage().getParameters().get('Team.id');
                String recordId = Team[0].Id;
                system.debug('@@@@@TeamMemberRecordId'+recordId);
                //RedirectPage(recordId);
                //return 'Login Success';
                return recordId;
            }
            else{
               return 'Invalid Password';
            }  
            
            
        }
    }
    
  
    
    public String UserName {get; set;} 
     @AuraEnabled
  	public static String getforgetpassword(String UserName,String Password1,String Password2 ) {  
         String procesMsg = '';
           Team_Member_Profile__c Team =[select Id,UserName__c,Password__c from Team_Member_Profile__c Where UserName__c = :UserName limit 1];
      if(Password1 == Password2){
           Team.Password__c = Password2;
          update Team;
          procesMsg = 'SUCCESS';

      } else {
        procesMsg = 'ERROR';
      }
        
         return procesMsg;
       }
   
  
                          

}









